create database arrendamientos;
use arrendamientos;

create table users (
  id int auto_increment primary key not null,
  user varchar(100),
  password varchar(100)
);

INSERT INTO users (user, password) VALUES ('admin', '123');

CREATE TABLE datos_cli_prov (
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(100),
    ruc VARCHAR(11) UNIQUE,
    direccion_propietario VARCHAR(100),
    celular INT(9),
    nacimiento DATE,
    dni_propietario VARCHAR(8) UNIQUE,
    fecha_ingreso TIMESTAMP,
    correo VARCHAR(100),
    estado_civil VARCHAR(30),
    conyuge VARCHAR(100),
    dni_conyuge VARCHAR(8) UNIQUE,
    ciudad VARCHAR(100),
    celular_conyuge INT(9),
    provincia VARCHAR(100),
    departamento VARCHAR(100),
    distrito VARCHAR(100)	  
);

create table piso (
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  piso VARCHAR(100) UNIQUE
);

CREATE TABLE cuarto (
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    piso_id INT,
    numcuarto VARCHAR(100) UNIQUE,
    metraje VARCHAR(100),
    foto LONGBLOB,
    ocupado BOOLEAN DEFAULT false,
    FOREIGN KEY (piso_id) REFERENCES piso(id)
);

CREATE TABLE rent_calculation (
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  client_id INT,
  FOREIGN KEY (client_id) REFERENCES datos_cli_prov(id) ON DELETE CASCADE,
  rent DECIMAL(10,2),
  garantia DECIMAL(10,2),
  total INT,
  total_rent DECIMAL(10,2),
  floor_id INT,
  room_id INT,
  interes DECIMAL(10,2),
  mensual DECIMAL(10,2),
  fecha DATE,
  fecha_ingreso DATE,
  tipo_pago VARCHAR(30),
  pago_diario DECIMAL(10,2),
  pago_sem DECIMAL(10,2),
  quincenal DECIMAL(10,2),
  fechafinal VARCHAR(30),
  estado_rent_calculation BOOLEAN NOT NULL DEFAULT TRUE,
  detalle_cuarto VARCHAR(200),
  FOREIGN KEY (floor_id) REFERENCES piso(id),
  FOREIGN KEY (room_id) REFERENCES cuarto(id)
);

CREATE TABLE registro_amortizaciones (
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  numero_amortizaciones VARCHAR(10),
  fecha_amortizaciones TIMESTAMP,
  detalle_amortizaciones VARCHAR(200),
  importe_amortizaciones VARCHAR(200)
);

CREATE TABLE importe_mensual (
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  rent_calculation_id INT,
  FOREIGN KEY (rent_calculation_id) REFERENCES rent_calculation(id) ON DELETE CASCADE,
  ord INT,
  fecha DATE,
  saldo DECIMAL(10,2),
  capital DECIMAL(10,2),
  interes DECIMAL(10,2),
  por_pagar DECIMAL(10,2),
  sum_capital DECIMAL(10,2),
  sum_interes DECIMAL(10,2),
  sum_porPagar DECIMAL(10,2)
);

CREATE TABLE importe_variado (
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  rent_calculation_id INT,
  FOREIGN KEY (rent_calculation_id) REFERENCES rent_calculation(id) ON DELETE CASCADE,
  ord INT,
  fecha DATE,
  importe DECIMAL(10,2),
  sum_importe DECIMAL(10,2),
  saldos DECIMAL(10,2),
  pago DECIMAL(10,2) DEFAULT 0.0,
  estado BOOLEAN DEFAULT false,
  fecha_amortizacion TIMESTAMP,
  piso_id INT,
  cuarto_id INT,
  numero_amortizacion VARCHAR(10),
  detalle VARCHAR(200),
  FOREIGN KEY (cuarto_id) REFERENCES cuarto(id),
  FOREIGN KEY (piso_id) REFERENCES piso(id)
);

CREATE TABLE mantenimiento (
id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
nombre VARCHAR(100),
direccion VARCHAR(100),
dni VARCHAR(8) UNIQUE,
celular VARCHAR(9),
rol VARCHAR(100),
provincia VARCHAR(100),
departamento VARCHAR(100),
distrito VARCHAR(100)	  
);

CREATE TABLE contrato (
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    id_rent_calculation INT,
    id_mantenimiento_arrendador INT,
    id_mantenimiento_garante INT,
    personas INT,
    FOREIGN KEY (id_rent_calculation) REFERENCES rent_calculation(id),
    FOREIGN KEY (id_mantenimiento_arrendador) REFERENCES mantenimiento(id),
    FOREIGN KEY (id_mantenimiento_garante) REFERENCES mantenimiento(id)
);